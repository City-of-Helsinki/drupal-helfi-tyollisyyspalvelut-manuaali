<?php
use Drupal\Core\Entity\EntityInterface;
use Drupal\content_moderation\Entity\ContentModerationStateInterface;
use Drupal\service_manual_workflow\Event\ServiceModerationEvent;

/**
 * @file
 * Primary module hooks for Service manual workflow module.
 *
 * @see https://www.drupal.org/node/2217931
 */

/**
 * Implements hook_entity_update().
 *
 * @param \Drupal\Core\Entity\EntityInterface $entity
 */
function service_manual_workflow_entity_update(EntityInterface $entity) {
  if (!$entity instanceof ContentModerationStateInterface) {
    return;
  }

  if (empty($entity->original)) {
    return;
  }

  $original_state = $entity->original->moderation_state->value;
  $state = $entity->moderation_state->value;

  // Do not dispatch anything when state hasnt changed.
  if ($original_state == $state) {
    return;
  }

  $transition = sprintf('service_manual_workflow.%s.to.%s', $original_state, $state);
  $event = new ServiceModerationEvent($entity, \Drupal::currentUser());
  Drupal::service('event_dispatcher')->dispatch($transition, $event);
}
