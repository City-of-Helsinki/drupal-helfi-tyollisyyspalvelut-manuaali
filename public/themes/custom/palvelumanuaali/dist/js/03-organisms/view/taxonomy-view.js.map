{"version":3,"file":"js/03-organisms/view/taxonomy-view.js","mappings":"kBAAA,IAAWA,EAAGC,EAAQC,EAAXF,EAsGRG,OAtGWF,EAsGHA,OAtGWC,EAsGHE,KApGjBH,EAAOI,UAAUC,kBAAoB,CACnCC,OAAM,WAiEJ,SAASC,EAASC,GAAgB,IAE5BC,EAAwB,GA1D9B,SAA6BD,GAAgB,IACvCE,EAoCN,SAAyBF,GACvB,IAAIG,EAAe,GASnB,OAPAZ,EAAE,aAAcS,GAAeI,MAAK,WAClC,IAAIC,EAAS,CACXC,OAAUX,KACVY,MAAShB,EAAEI,MAAMa,cAEnBL,EAAaM,KAAKJ,EACpB,IACOF,CACT,CA/CgBO,CAAgBV,GAC1BW,EAAepB,EAAES,GAAeY,aAEhCC,EAAiBF,EACjBG,EAAO,GACPC,EAAa,EAsBjB,OArBAD,EAAKC,GAAc,GAEnBxB,EAAEW,GAASE,MAAK,SAASY,EAAOC,GAC9BJ,GAAkCI,EAAKV,MACvCU,EAAKC,UAAYL,EACK,GAAlBA,IAMFA,EAAiBF,EAAeM,EAAKV,MACrCU,EAAKC,UAAYL,EAGjBE,IACAD,EAAKC,GAAc,IATnBD,EAAKC,GAAYN,KAAKQ,EAa1B,IACOH,CACT,CA4BcK,CAAoBnB,GACboB,OAEnB7B,EAAE,oBAAoB8B,IAAI,gBADXpB,EAAO,KAExB,CAKAV,EAAE+B,UAAUC,OAAM,WAChBxB,EAAS,+DACX,IAMAR,EAAEE,GAAQ+B,GAAG,QAAQ,WAGnBC,YAAW,WACT1B,EAAS,+DACX,GAAG,GACL,IAKAR,EAAEE,GAAQ+B,GAAG,UAAU,WACrBzB,EAAS,+DACX,GACF,E,IChGgB","sources":["webpack://palvelumanuaali/./components/03-organisms/view/taxonomy-view.js","webpack://palvelumanuaali/webpack/startup"],"sourcesContent":["(function ($, Drupal, window) {\n\n  Drupal.behaviors.searchPageFilters = {\n    attach(context, settings) {\n\n      const FILTER_WRAPPER = '.view-taxonomy-term .bef-nested .highlight + .filter-buttons';\n      // /**\n      // //  * Calculate filter rows from element widths.\n      // //  *\n      // //  * @param filterWrapper\n      // //  * @returns {*[]}\n      // //  */\n      function calculateFilterRows(filterWrapper) {\n        let filters = getFilterWidths(filterWrapper);\n        let wrapperWidth = $(filterWrapper).innerWidth();\n        // We want 2 rows so we want 2x wrapper width.\n        let containerWidth = wrapperWidth;\n        let rows = [];\n        let currentRow = 0;\n        rows[currentRow] = [];\n\n        $(filters).each(function(index, item) {\n          containerWidth = containerWidth - item.width;\n          item.row_width = containerWidth;\n          if (containerWidth >= 0) {\n            // Add item to current row.\n            rows[currentRow].push(item);\n          }\n          else {\n            // Reset container width and substract item width.\n            containerWidth = wrapperWidth - item.width;\n            item.row_width = containerWidth;\n\n            // Add new row.\n            currentRow++;\n            rows[currentRow] = [];\n            // Add current item to new row.\n            rows[currentRow].push(item);\n          }\n        });\n        return rows;\n      }\n\n      // /**\n      //  * Returns array of filters and their element widths.\n      //  *\n      //  * @param filterWrapper\n      //  * @returns {*[]}\n      //  */\n      function getFilterWidths(filterWrapper) {\n        let filterWidths = [];\n\n        $('.form-item', filterWrapper).each(function(index, width) {\n          let filter = {\n            \"object\": this,\n            \"width\": $(this).outerWidth()\n          }\n          filterWidths.push(filter);\n        });\n        return filterWidths;\n      }\n\n      // /**\n      //  * Initialize filter toggling.\n      //  *\n      //  * @param filterWrapper\n      //  * @returns {boolean}\n      //  */\n      function initRows(filterWrapper) {\n        let array = calculateFilterRows(filterWrapper);\n        let margin = array.length * 34;\n        let marginpx = margin+'px';\n        $('.form-checkboxes').css(\"margin-bottom\", marginpx);\n      }\n      //\n      // /**\n      //  * Set filter toggler on document ready.\n      //  */\n      $(document).ready(function() {\n        initRows(FILTER_WRAPPER);\n      })\n\n      //\n      // /**\n      //  * Initialize filter toggle on page load.\n      //  */\n      $(window).on('load', function() {\n        // Without this bubblegum fix elements get wrong widths\n        // due to flex items.\n        setTimeout(function() {\n          initRows(FILTER_WRAPPER);\n        }, 0.2);\n      });\n      //\n      // /**\n      //  * Toggle filters on window resize event.\n      //  */\n      $(window).on('resize', function() {\n        initRows(FILTER_WRAPPER);\n      });\n    }\n  }\n})(jQuery, Drupal, this);\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = {};\n__webpack_modules__[2902]();\n"],"names":["$","Drupal","window","jQuery","this","behaviors","searchPageFilters","attach","initRows","filterWrapper","margin","filters","filterWidths","each","filter","object","width","outerWidth","push","getFilterWidths","wrapperWidth","innerWidth","containerWidth","rows","currentRow","index","item","row_width","calculateFilterRows","length","css","document","ready","on","setTimeout"],"sourceRoot":""}