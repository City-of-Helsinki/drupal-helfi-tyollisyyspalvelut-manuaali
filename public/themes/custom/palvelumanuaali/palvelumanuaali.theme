<?php

/**
 * @file
 * Functions to support theming.
 */


 /**
  * Implements hook_preprocess_breadcrumb().
  */
 function palvelumanuaali_preprocess_breadcrumb(&$variables){
   $request = \Drupal::request();
   $route = \Drupal::routeMatch()->getRouteObject();
   if ($variables['breadcrumb']) {
     $variables['title'] = \Drupal::service('title_resolver')->getTitle($request, $route);
   }
   $variables['#cache']['contexts'][] = 'url';
 }


 /**
  * Implements hook_preprocess_block__language_switcher().
  */
 function palvelumanuaali_preprocess_block__language_block(&$variables) {
   // Find the amount of translations current node has.
   $node = \Drupal::routeMatch()->getParameter('node');
   if (!empty($node)) {
     $translation_languages = $node->getTranslationLanguages(TRUE);
     $variables['lang_count'] = sizeof($translation_languages);
   }
 }

 /**
  * Implements hook_preprocess_links__language_block().
  */
 function palvelumanuaali_preprocess_links__language_block(&$variables) {
   $current_langcode = \Drupal::languageManager()->getCurrentLanguage()->getId();

   // Hide language links to non-translated versions.
   $node = \Drupal::routeMatch()->getParameter('node');
   if (isset($node)) {
     $translation_languages = $node->getTranslationLanguages(TRUE);
     foreach ($variables['links'] as $langcode => $link) {
       if (!array_key_exists($langcode, $translation_languages)) {
         unset($variables['links'][$langcode]);
       }
     }
   }

   // Add a new class to each link item and change the language link order:
   // move current language to first position.
   foreach ($variables['links'] as $langcode => $link) {
     $link['link']['#options']['attributes']['class'][] = 'dropdown-item';
     $link['link']['#options']['attributes']['lang'] = $langcode;
     // Replace the text label with language code.
      if ($langcode == $current_langcode) {
       $link['link']['#langcode'] = $langcode;
       $variables['links'][$langcode] = $link;
      }
      if ($langcode == $current_langcode) {
       unset($variables['links'][$langcode]);
       array_unshift($variables['links'], $link);
     }
   }
 }

 /**
  * @param array $suggestions
  * @param array $variables
  * @param $hook
  */
 function palveumanuaali_theme_suggestions_form_element_alter(array &$suggestions, array $variables, $hook)
 {
   if (isset($variables['element']['#id'])) {
     $id = str_replace("-", "_", $variables['element']['#id']);
     $suggestions[] = $hook . '__' . $id;
   }
 }
