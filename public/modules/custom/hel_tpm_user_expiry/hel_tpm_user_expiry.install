<?php

/**
 * @file
 * Install file for hel_tpm_user_expiry module.
 */

/**
 * Remove anonymous users from groups.
 */
function hel_tpm_user_expiry_update_10001(&$sandbox) {
  $database = \Drupal::database();
  $storage = \Drupal::entityTypeManager()->getStorage('user');
  $membership_loader = \Drupal::service('group.membership_loader');

  $query = $database->select('users_field_data', 'u')
    ->fields('u', ['uid'])
    ->condition('u.status', 0)
    ->condition('u.name', 'anonymous-%', 'LIKE')
    ->execute()->fetchAllAssoc('uid');

  $users = $storage->loadMultiple(array_keys($query));
  foreach ($users as $user) {
    $memberships = $membership_loader->loadByUser($user);
    foreach ($memberships as $membership) {
      $membership->getGroupRelationship()->delete();
    }
  }
}

/**
 * Anonymize blocked users which are not yet anonymized.
 */
function hel_tpm_user_expiry_update_10002(&$sandbox) {
  $anonymizer = \Drupal::service('hel_tpm_user_expiry.anonymizer');
  $storage = \Drupal::service('entity_type.manager')->getStorage('user');
  $blocked_users = $storage->getQuery()
    ->accessCheck(FALSE)
    ->condition('name', 'anonymous-%', 'NOT LIKE')
    ->condition('status', 0)
    ->condition('changed', strtotime('-210 days'), "<")
    ->condition('uid', 0, "!=")
    ->execute();

  foreach ($blocked_users as $uid) {
    $user = $storage->load($uid);
    $anonymizer->anonymizeUser($user);
  }
}
