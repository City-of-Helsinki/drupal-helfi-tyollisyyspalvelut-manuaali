<?php

/**
 * @file
 * Install file for hel_tpm_user_expiry module.
 */

/**
 * Remove anonymous users from groups.
 */
function hel_tpm_user_expiry_update_10001(&$sandbox) {
  $database = \Drupal::database();
  $storage = \Drupal::entityTypeManager()->getStorage('user');
  $membership_loader = \Drupal::service('group.membership_loader');

  $query = $database->select('users_field_data', 'u')
    ->fields('u', ['uid'])
    ->condition('u.status', 0)
    ->condition('u.name', 'anonymous-%', 'LIKE')
    ->execute()->fetchAllAssoc('uid');

  $users = $storage->loadMultiple(array_keys($query));
  foreach ($users as $user) {
    $memberships = $membership_loader->loadByUser($user);
    foreach ($memberships as $membership) {
      $membership->getGroupRelationship()->delete();
    }
  }
}

/**
 * Anonymize blocked users which are not yet anonymized.
 */
function hel_tpm_user_expiry_update_10002(&$sandbox) {
  $anonymizer = \Drupal::service('hel_tpm_user_expiry.anonymizer');
  $storage = \Drupal::service('entity_type.manager')->getStorage('user');
  $blocked_users = $storage->getQuery()
    ->accessCheck(FALSE)
    ->condition('name', 'anonymous-%', 'NOT LIKE')
    ->condition('status', 0)
    ->condition('changed', strtotime('-210 days'), "<")
    ->condition('uid', 0, "!=")
    ->execute();

  foreach ($blocked_users as $uid) {
    $user = $storage->load($uid);
    $anonymizer->anonymizeUser($user);
  }
}

/**
 * Anonymize blocked users which are not yet anonymized.
 */
function hel_tpm_user_expiry_update_10003(&$sandbox) {
  $anonymizer = \Drupal::service('hel_tpm_user_expiry.anonymizer');
  $storage = \Drupal::service('entity_type.manager')->getStorage('user');
  $query = $storage->getQuery()
    ->accessCheck(FALSE)
    ->condition('name', 'anonymous-%', 'NOT LIKE')
    ->condition('status', 0)
    ->condition('changed', strtotime('-30 days'), "<")
    ->condition('uid', 0, "!=")
    ->sort('uid', 'ASC');

  if (!isset($sandbox['progress'])) {
    $count_query = clone $query;
    // This must be the first run. Initialize the sandbox.
    $sandbox['progress'] = 0;
    $sandbox['current_uid'] = 0;
    $sandbox['max'] = $count_query->count()->execute();
  }

  $blocked_users = $query
    ->condition('uid', $sandbox['current_uid'], '>')
    ->range(0, 20)
    ->execute();

  foreach ($blocked_users as $uid) {
    $user = $storage->load($uid);
    $anonymizer->anonymizeUser($user, TRUE);
    $sandbox['current_uid'] = $uid;
    $sandbox['progress']++;
  }

  $sandbox['#finished'] = empty($sandbox['max']) ? 1 : $sandbox['progress'] / $sandbox['max'];
}

/**
 * Delete blocked unactivated users.
 */
function hel_tpm_user_expiry_update_10004(&$sandbox) {
  $storage = \Drupal::service('entity_type.manager')->getStorage('user');

  $uids = \Drupal::database()->select('users_field_data', 'ufd')
    ->fields('ufd', ['uid'])
    ->condition('uid', 0, '<>')
    ->condition('uid', 1, '<>')
    ->condition('status', 0)
    ->condition('access', 0)
    ->execute()->fetchAllAssoc('uid');

  if (empty($uids)) {
    return;
  }

  $users = $storage->loadMultiple(array_keys($uids));
  foreach ($users as $user) {
    $user->delete();
  }
}
