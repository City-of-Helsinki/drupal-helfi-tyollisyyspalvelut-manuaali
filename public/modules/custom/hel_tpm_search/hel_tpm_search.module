<?php

/**
 * @file
 * Module file for hel_tpm_search.
 */

use Drupal\search_api\Entity\Index;
use Drupal\views\Plugin\views\query\QueryPluginBase;
use Drupal\views\ViewExecutable;

/**
 * Implements hook_views_query_alter().
 */
function hel_tpm_search_views_query_alter(ViewExecutable $view, QueryPluginBase $query) {

  // Remove municipality condition when exposed filter isn't selected.
  if ($view->id() == 'solr_service_search') {
    $exposed_input = $view->getExposedInput();
    if (!empty($exposed_input['field_municipality'])) {
      return;
    }
    foreach ($query->getWhere() as &$condition) {
      if (empty($condition['conditions'])) {
        continue;
      }
      foreach ($condition['conditions'] as $key2 => $cond) {
        if ($cond[0] == 'field_municipality_irrelevant') {
          unset($condition['conditions'][$key2]);
        }
      }
    }
  }
}

/**
 * Implements hook_views_post_render().
 */
function hel_tpm_search_views_post_render(ViewExecutable $view) {
  switch ($view->id()) {
    case 'solr_service_search':
      // Hide sorting options when results are empty.
      if (empty($view->result) && !empty($view->exposed_widgets['sort_bef_combine'])) {
        $view->exposed_widgets['sort_bef_combine'] = NULL;
      }
      break;
  }
}

/**
 * Implements hook_views_data_alter().
 */
function hel_tpm_search_views_data_alter(array &$data): void {
  /** @var \Drupal\search_api\IndexInterface $index */
  foreach (Index::loadMultiple() as $index) {
    $key = 'search_api_index_' . $index->id();
    $data[$key]['age_groups_filter'] = [
      'title' => t('Age groups filter'),
      'filter' => [
        'title' => t('Age groups filter'),
        'help' => 'Filters services by age groups.',
        'id' => 'age_groups_filter',
      ],
    ];
  }
}

/**
 * Implements hook_views_pre_build().
 */
function hel_tpm_search_views_pre_build(ViewExecutable $view) {
  if ($view->id() === 'solr_service_search') {
    $exposed_input = $view->getExposedInput();
    if (empty($exposed_input['langcode'])) {
      $exposed_input['langcode'] = \Drupal::service('language_manager')->getCurrentLanguage()->getId();
      $view->setExposedInput($exposed_input);
    }
  }
}

/**
 * Implements hook_theme().
 */
function hel_tpm_search_theme() {
  return [
    'search_header' => [
      'variables' => [
        'content' => NULL,
      ],
    ],
  ];
}
